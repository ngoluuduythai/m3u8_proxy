plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    dataBinding {
        enabled = true
    }

    compileSdk 32

    defaultConfig {
        applicationId "com.webrtc.localserver"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        ndk {
            abiFilters "armeabi-v7a", "x86_64"
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    android.applicationVariants.all { variant ->
//        def t = tasks.register("generate${variant.name.capitalize()}UniFFIBindings", Exec) {
//            workingDir "${project.projectDir}"
//            // Runs the bindings generation, note that you must have uniffi-bindgen installed and in your PATH environment variable
//            commandLine 'uniffi-bindgen', 'generate', '<PATH TO .udl FILE>', '--language', 'kotlin', '--out-dir', "${buildDir}/generated/source/uniffi/${variant.name}/java"
//        }
//        variant.javaCompileProvider.get().dependsOn(t)
//
//        def sourceSet = variant.sourceSets.find { it.name == variant.name }
//        sourceSet.java.srcDir new File(buildDir, "generated/source/uniffi/${variant.name}/java")
        // XXX: I've been trying to make this work but I can't, so the compiled bindings will show as "regular sources" in Android Studio.
        //idea.module.generatedSourceDirs += file("${buildDir}/generated/source/uniffi/${variant.name}/java/uniffi")
    }

}


dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // exoplayer
    implementation("com.google.android.exoplayer:exoplayer:2.18.0")

    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation("com.orhanobut:logger:2.2.0")
    implementation("com.google.code.gson:gson:2.9.0")
    implementation 'org.nanohttpd:nanohttpd:2.3.1'
    implementation "net.java.dev.jna:jna:5.7.0@aar"

}


